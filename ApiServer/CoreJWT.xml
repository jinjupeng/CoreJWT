<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiServer</name>
    </assembly>
    <members>
        <member name="M:CoreJWT.Controllers.AuthController.CheckAccount(System.String,System.String,System.String@)">
            <summary>
            模拟登陆校验，因为是模拟，所以逻辑很‘模拟’
            </summary>
            <param name="userName"></param>
            <param name="pwd"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="T:CoreJWT.Exception.GlobalExceptionFilter">
            <summary>
            自定义全局异常过滤器：当程序发生异常时，处理系统出现的未捕获的异常
            自定义一个全局异常过滤器需要实现IExceptionFilter接口
            </summary>
        </member>
        <member name="M:CoreJWT.Exception.GlobalExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            IExceptionFilter接口会要求实现OnException方法，当系统发生未捕获异常时就会触发这个方法。
            OnException方法有一个ExceptionContext异常上下文，其中包含了具体的异常信息，HttpContext及mvc路由信息。
            系统一旦出现未捕获异常后，比较常见的做法就是使用日志工具，将异常的详细信息记录下来，方便调试
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CoreJWT.Exception.GlobalExceptionFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:CoreJWT.Exception.GlobalExceptionFilter.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:CoreJWT.Exception.GlobalExceptionFilter.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="M:CoreJWT.JWT.JwtHelper.IssueJwt(CoreJWT.JWT.TokenModelJwt)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CoreJWT.JWT.JwtHelper.SerializeJwt(System.String)">
            <summary>
            解析token
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:CoreJWT.JWT.TokenModelJwt">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.TokenModelJwt.Sid">
            <summary>
            Sid
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.TokenModelJwt.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.TokenModelJwt.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:CoreJWT.JWT.PermissionHandler">
            <summary>
            权限授权处理器
            </summary>
        </member>
        <member name="T:CoreJWT.JWT.PermissionItem">
            <summary>
            用户或角色或其他凭据实体
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionItem.Role">
            <summary>
            用户或角色或其他凭据名称
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionItem.Url">
            <summary>
            请求Url
            </summary>
        </member>
        <member name="T:CoreJWT.JWT.PermissionRequirement">
            <summary>
            必要参数类，类似一个订单信息
            继承 IAuthorizationRequirement，用于设计自定义权限处理器PermissionHandler
            因为AuthorizationHandler 中的泛型参数 TRequirement 必须继承 IAuthorizationRequirement
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.Permissions">
            <summary>
            用户权限集合，一个订单包含了很多详情，
            同理，一个网站的认证发行中，也有很多权限详情(这里是Role和URL的关系)
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.DeniedAction">
            <summary>
            无权限action
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.ClaimType">
            <summary>
            认证授权类型
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.LoginPath">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.Issuer">
            <summary>
            发行人
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.Audience">
            <summary>
            订阅人
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.Expiration">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:CoreJWT.JWT.PermissionRequirement.SigningCredentials">
            <summary>
            签名验证
            </summary>
        </member>
        <member name="M:CoreJWT.JWT.PermissionRequirement.#ctor(System.String,System.Collections.Generic.List{CoreJWT.JWT.PermissionItem},System.String,System.String,System.String,Microsoft.IdentityModel.Tokens.SigningCredentials,System.TimeSpan)">
            <summary>
            构造
            </summary>
            <param name="deniedAction">拒约请求的url</param>
            <param name="permissions">权限集合</param>
            <param name="claimType">声明类型</param>
            <param name="issuer">发行人</param>
            <param name="audience">订阅人</param>
            <param name="signingCredentials">签名验证实体</param>
            <param name="expiration">过期时间</param>
        </member>
        <member name="P:CoreJWT.JwtSettings.Issuer">
            <summary>
            证书颁发者
            </summary>
        </member>
        <member name="P:CoreJWT.JwtSettings.Audience">
            <summary>
            允许使用的角色
            </summary>
        </member>
        <member name="P:CoreJWT.JwtSettings.SecretKey">
            <summary>
            加密字符串
            </summary>
        </member>
        <member name="T:CoreJWT.SwaggerHelper.CustomApiVersion.ApiVersions">
            <summary>
            Api接口版本 自定义
            </summary>
        </member>
        <member name="F:CoreJWT.SwaggerHelper.CustomApiVersion.ApiVersions.V1">
            <summary>
            V1 版本
            </summary>
        </member>
        <member name="F:CoreJWT.SwaggerHelper.CustomApiVersion.ApiVersions.V2">
            <summary>
            V2 版本
            </summary>
        </member>
    </members>
</doc>
